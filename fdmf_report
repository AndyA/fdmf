#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use Storable;

my %Opt = (
  verbose => 0,
  db      => undef,
);

GetOptions(
  'verbose' => \$Opt{verbose},
  'D|db:s'  => \$Opt{db},
) or usage( 1 );
die "The --db switch must be supplied\n"
 unless $Opt{db};

our $DB = get_db( $Opt{db} );

my %ph2f = ();
while ( my ( $name, $sig ) = each %{ $DB->{f} } ) {
  if ( my $hash = $DB->{i}{$sig} ) {
    my $phash = $DB->{h}{$hash};
    $ph2f{$phash}{$name}++ if defined $phash;
  }
}

while ( <> ) {
  chomp;
  my ( $distance, $this, $that ) = split;
  die "Bad input\n" unless defined $that && $distance =~ /^\d+$/;
  print join( "\n",
    $distance,
    names_for_phash( $this ),
    names_for_phash( $that ) ),
   "\n\n";
}

sub names_for_phash {
  my $phash = shift;
  if ( $ph2f{$phash} ) {
    return sort keys %{ $ph2f{$phash} };
  }
  return "phash:$phash";
}

sub get_db {
  my $db = shift;
  return retrieve $db if -e $db;
  return {};
}

sub put_db {
  my ( $db, $data ) = @_;
  if ( -e $db ) {
    my $bak = "$db.old";
    rename $db, $bak or die "Can't rename $db as $bak: $!\n";
  }
  store $data, $db;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl
## Please see file perltidy.ERR
