#!/usr/bin/env perl

use strict;
use warnings;

use Storable;

use constant DBFILE => glob '~/.fdmf';

our $DB = get_db( DBFILE );
#END { put_db( DBFILE, $DB ) if defined $DB }

my %ph2f = ();
while ( my ( $name, $sig ) = each %{ $DB->{f} } ) {
  if ( my $hash = $DB->{i}{$sig} ) {
    my $phash = $DB->{h}{$hash};
    $ph2f{$phash} = $name if defined $phash;
  }
}

while ( <> ) {
  chomp;
  my ( $distance, $this, $that ) = split;
  die "Bad input\n" unless defined $that && $distance =~ /^\d+$/;
  printf "%s\n%s\n%s\n\n", $distance, $ph2f{$this} || $this,
   $ph2f{$that} || $that;
}

sub get_db {
  my $db = shift;
  return retrieve $db if -e $db;
  return {};
}

sub put_db {
  my ( $db, $data ) = @_;
  if ( -e $db ) {
    my $bak = "$db.old";
    rename $db, $bak or die "Can't rename $db as $bak: $!\n";
  }
  store $data, $db;
}

# vim:ts=2:sw=2:sts=2:et:ft=perl
## Please see file perltidy.ERR
